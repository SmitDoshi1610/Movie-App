{"version":3,"sources":["styles/global/GlobalStyle.js","context/context.js","components/Header/Header.styles.js","images/react-movie-logo.svg","images/tmdb_logo.svg","components/Header/index.js","config/config.js","API/API.js","components/HeroImage/HeroImage.styles.js","components/HeroImage/index.js","components/Grid/Grid.styles.js","components/Grid/index.js","components/Thumbnail/Thumbnail.styles.js","components/Thumbnail/index.js","components/Spinner/index.js","components/Spinner/Spinner.styles.js","components/SearchBar/SearchBar.styles.js","images/search-icon.svg","components/SearchBar/index.js","components/Button/Button.styles.js","components/Button/index.js","helpers/helpers.js","hooks/useHomeFetch.js","images/no_image.jpg","components/Home.js","components/BreadCrump/BreadCrump.styles.js","components/BreadCrump/index.js","components/MovieInfo/MovieInfo.styles.js","components/MovieInfo/index.js","components/MovieInfoBar/MovieInfoBar.styles.js","components/MovieInfoBar/index.js","components/Actor/Actor.styles.js","components/Actor/index.js","components/Movie.js","hooks/useMovieFetch.js","components/NotFound.js","components/Login/login.styles.js","components/Login/login.js","App.js","reportWebVitals.js","index.js"],"names":["GlobalStyle","createGlobalStyle","Context","React","createContext","UserProvider","children","useState","undefined","state","setState","Provider","value","Wrapper","styled","div","Content","LogoImg","img","TMDBLogoImg","Header","to","src","RMDBLogo","alt","TMDBLogo","API_URL","API_KEY","SEARCH_BASE_URL","POPULAR_BASE_URL","REQUEST_TOKEN_URL","LOGIN_URL","SESSION_ID_URL","IMAGE_BASE_URL","BACKDROP_SIZE","POSTER_SIZE","defaultConfig","method","headers","apiSettings","fetchMovies","searchTerm","page","a","endpoint","fetch","json","fetchMovie","movieId","fetchCredits","creditsEndpoint","getRequestToken","reqToken","request_token","authenticate","requestToken","username","password","bodyData","body","JSON","stringify","success","sessionId","rateMovie","rating","image","Text","HeroImage","title","text","Grid","header","Fragment","Image","movieHeight","Thumbnail","clickable","target","prototype","PropTypes","string","number","bool","Spinner","SearchBar","setSearchTerm","initial","useRef","useEffect","current","timer","setTimeout","clearTimeout","searchIcon","type","placeholder","onChange","e","currentTarget","button","Button","callback","onClick","calcTime","time","hours","Math","floor","mins","convertMoney","money","Intl","NumberFormat","style","currency","minimumFractionDigits","format","isPersistedState","stateName","sessionState","sessionStorage","getItem","parse","intialState","results","total_pages","total_results","Home","loading","setLoading","error","setEror","isLoadingMore","setIsLoadingMore","API","movies","prev","console","log","setItem","useHomeFetch","backdrop_path","original_title","overview","map","movie","poster_path","NoImage","id","BreadCrump","movieTitle","backdrop","MovieInfo","className","vote_average","directors","length","director","name","credit_id","MovieInfoBar","budget","revenue","Actor","character","imageURL","Movie","setError","credits","crew","filter","member","job","actors","cast","useMovieFetch","useParams","runtime","actor","profile_path","NotFound","Login","setUsername","setPassword","useContext","setUser","navigate","useNavigate","handleSubmit","session_id","handleInput","App","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qPAEaA,EAAcC,YAAH,qxB,cCCXC,EAAUC,IAAMC,gBAUdC,EARM,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACtB,EAA0BC,wBAASC,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAEA,OACE,cAACR,EAAQS,SAAT,CAAkBC,MAAO,CAACH,EAAOC,GAAjC,SAA6CJ,KCPpCO,EAAUC,IAAOC,IAAV,oFAKPC,EAAUF,IAAOC,IAAV,2LASPE,EAAUH,IAAOI,IAAV,wHAOPC,EAAcL,IAAOI,IAAV,uHCvBT,MAA0B,6CCA1B,MAA0B,sCCmB1BE,EAbA,WACb,OACE,cAACP,EAAD,UACE,eAACG,EAAD,WACE,cAAC,IAAD,CAAMK,GAAG,IAAT,SACE,cAACJ,EAAD,CAASK,IAAKC,EAAUC,IAAI,gBAE9B,cAACL,EAAD,CAAaG,IAAKG,EAAUD,IAAI,oB,8BCZlCE,EAAU,gCACVC,EAAU,mCAEVC,EAAe,UAAMF,EAAN,gCAAqCC,EAArC,0BACfE,EAAgB,UAAMH,EAAN,iCAAsCC,EAAtC,mBAGhBG,EAAiB,UAAMJ,EAAN,4CAAiDC,GAClEI,EAAS,UAAML,EAAN,4DAAiEC,GAC1EK,EAAc,UAAMN,EAAN,8CAAmDC,GAEjEM,EAAiB,6BAEjBC,EAAgB,QAEhBC,EAAc,OCNdC,EAAgB,CACpBC,OAAQ,OACRC,QAAS,CACP,eAAgB,qBAIdC,EAAc,CAClBC,YAAY,WAAD,4BAAE,WAAOC,EAAYC,GAAnB,eAAAC,EAAA,6DACLC,EAAWH,EAAU,UACpBb,GADoB,OACFa,EADE,iBACiBC,GADjB,UAEpBb,EAFoB,iBAEKa,GAHrB,SAISG,MAAMD,GAJf,8BAI0BE,OAJ1B,mFAAF,qDAAC,GAMZC,WAAW,WAAD,4BAAE,WAAOC,GAAP,eAAAL,EAAA,6DACJC,EADI,UACUlB,EADV,iBAC0BsB,EAD1B,oBAC6CrB,GAD7C,SAEUkB,MAAMD,GAFhB,8BAE2BE,OAF3B,mFAAF,mDAAC,GAIXG,aAAa,WAAD,4BAAE,WAAOD,GAAP,eAAAL,EAAA,6DACNO,EADM,UACexB,EADf,iBAC+BsB,EAD/B,4BAC0DrB,GAD1D,SAEQkB,MAAMK,GAFd,8BAEgCJ,OAFhC,mFAAF,mDAAC,GAKbK,gBAAgB,WAAD,4BAAE,4BAAAR,EAAA,sEACeE,MAAMf,GADrB,8BACyCgB,OADzC,cACTM,EADS,yBAERA,EAASC,eAFD,2CAAF,kDAAC,GAIhBC,aAAa,WAAD,4BAAE,WAAOC,EAAcC,EAAUC,GAA/B,iBAAAd,EAAA,6DACNe,EAAW,CACfF,WACAC,WACAJ,cAAeE,GAJL,SAQJV,MAAMd,EAAD,YAAC,eACPK,GADM,IAETuB,KAAMC,KAAKC,UAAUH,MAVb,8BAYVZ,OAZU,kBAcHgB,QAdG,iCAgBFjB,MAAMb,EAAD,YAAC,eACPI,GADM,IAETuB,KAAMC,KAAKC,UAAU,CAAER,cAAeE,OAlBhC,+BAoBRT,OApBQ,eAeJiB,EAfI,yBAqBHA,GArBG,4CAAF,uDAAC,GAwBbC,UAAU,WAAD,4BAAE,WAAOD,EAAWf,EAASpC,GAA3B,iBAAA+B,EAAA,6DACHC,EADG,UACWlB,EADX,iBAC2BsB,EAD3B,2BACqDrB,EADrD,uBAC2EoC,GAD3E,SAIDlB,MAAMD,EAAD,YAAC,eACPR,GADM,IAETuB,KAAMC,KAAKC,UAAU,CAAEjD,aANlB,8BAQPkC,OARO,cAGHmB,EAHG,yBAUFA,GAVE,2CAAF,uDAAC,IAcG1B,ICzEF1B,EAAUC,IAAOC,IAAV,kbAMV,qBAAGmD,SAiBAlD,EAAUF,IAAOC,IAAV,gGAMPoD,EAAOrD,IAAOC,IAAV,wiBCPFqD,GAnBG,SAAC,GAA4B,IAA1BF,EAAyB,EAAzBA,MAAOG,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KACjC,OACE,cAAC,EAAD,CAASJ,MAAOA,EAAhB,SACE,cAAC,EAAD,UACE,eAACC,EAAD,WACE,6BAAKE,IACL,4BAAIC,YCTDzD,GAAUC,IAAOC,IAAV,8PAePC,GAAUF,IAAOC,IAAV,+JCILwD,GAhBF,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,OAAQlE,EAAe,EAAfA,SACtB,OACE,cAAC,IAAMmE,SAAP,UACE,eAAC,GAAD,WACE,6BAAKD,IACL,cAAC,GAAD,UAAUlE,U,oBCRLoE,I,MAAQ5D,IAAOI,IAAV,6UAMN,qBAAGyD,YAA8B,mBCDvCC,GAAY,SAAC,GAAgD,IAA9CV,EAA6C,EAA7CA,MAAOlB,EAAsC,EAAtCA,QAAS6B,EAA6B,EAA7BA,UAAWF,EAAkB,EAAlBA,YAC9C,OACE,cAAC,IAAMF,SAAP,UACGI,EACC,cAAC,IAAD,CAAMxD,GAAE,WAAM2B,GAAW8B,OAAO,QAAhC,SACE,cAACJ,GAAD,CAAOpD,IAAK4C,EAAO1C,IAAI,cAAcmD,YAAaA,MAGpD,cAACD,GAAD,CAAOpD,IAAK4C,EAAO1C,IAAI,cAAcmD,YAAaA,OAM1DC,GAAUG,UAAY,CACpBb,MAAOc,KAAUC,OACjBjC,QAASgC,KAAUE,OACnBL,UAAWG,KAAUG,MAGRP,I,0CAAAA,MC1BAQ,GCCQtE,IAAOC,IAAV,0WCAPF,GAAUC,IAAOC,IAAV,yKASPC,GAAUF,IAAOC,IAAV,4oBCXL,OAA0B,wCC8C1BsE,GAxCG,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cACnB,EAA0B/E,mBAAS,IAAnC,mBAAOE,EAAP,KAAcC,EAAd,KAKM6E,EAAUC,kBAAO,GAavB,OAXAC,qBAAU,WACR,IAAIF,EAAQG,QAAZ,CAIA,IAAMC,EAAQC,YAAW,WACvBN,EAAc7E,KACb,KACH,OAAO,kBAAMoF,aAAaF,IANxBJ,EAAQG,SAAU,IAOnB,CAACJ,EAAe7E,IAGjB,cAAC,IAAMgE,SAAP,UACE,cAAC,GAAD,UACE,eAAC,GAAD,WACE,qBAAKnD,IAAKwE,GAAYtE,IAAI,gBAC1B,uBACEuE,KAAK,OACLC,YAAY,eACZC,SAzBW,SAACC,GACpBxF,EAASwF,EAAEC,cAAcvF,QAyBjBA,MAAOH,YChCNI,GAAUC,IAAOsF,OAAV,4VCkBLC,GAfA,SAAC,GAA4B,IAA1B/F,EAAyB,EAAzBA,SAAUgG,EAAe,EAAfA,SAC1B,OACE,cAAC,IAAM7B,SAAP,UACE,cAAC,GAAD,CAASsB,KAAK,SAASQ,QAASD,EAAhC,SACGhG,O,SCRIkG,GAAW,SAACC,GACvB,IAAMC,EAAQC,KAAKC,MAAMH,EAAO,IAC1BI,EAAOJ,EAAO,GACpB,MAAM,GAAN,OAAUC,EAAV,aAAoBG,EAApB,MAIWC,GAAe,SAACC,GAM3B,OALoB,IAAIC,KAAKC,aAAa,QAAS,CACjDC,MAAO,WACPC,SAAU,MACVC,sBAAuB,IAENC,OAAON,IAIfO,GAAmB,SAAAC,GAC9B,IAAMC,EAAeC,eAAeC,QAAQH,GAC5C,OAAOC,GAAgB5D,KAAK+D,MAAMH,ICd9BI,GAAc,CAClBlF,KAAM,EACNmF,QAAS,GACTC,YAAa,EACbC,cAAe,GCVF,OAA0B,qCCkE1BC,GA5CF,WACX,MFV0B,WAC1B,MAAoCzH,mBAAS,IAA7C,mBAAOkC,EAAP,KAAmB6C,EAAnB,KACA,EAA0B/E,mBAASqH,IAAnC,mBAAOnH,EAAP,KAAcC,EAAd,KACA,EAA8BH,oBAAS,GAAvC,mBAAO0H,EAAP,KAAgBC,EAAhB,KACA,EAAyB3H,oBAAS,GAAlC,mBAAO4H,EAAP,KAAcC,EAAd,KACA,EAA0C7H,oBAAS,GAAnD,mBAAO8H,EAAP,KAAsBC,EAAtB,KAEM9F,EAAW,uCAAG,WAAOE,GAAP,6BAAAC,EAAA,6DAAaF,EAAb,+BAA0B,GAA1B,SAEhB2F,GAAQ,GACRF,GAAW,GAHK,SAIKK,EAAI/F,YAAYC,EAAYC,GAJjC,OAIV8F,EAJU,OAMhB9H,GAAS,SAAC+H,GAAD,mBAAC,eACLD,GADI,IAEPX,QACEnF,EAAO,EAAP,uBAAe+F,EAAKZ,SAApB,aAAgCW,EAAOX,UAAvC,aAAsDW,EAAOX,cATjD,kDAYhBO,GAAQ,GAZQ,QAclBF,GAAW,GAdO,0DAAH,sDAqDjB,OAnCAzC,qBAAU,WACRjD,EAAY,KACX,IAGHiD,qBAAU,WACR,IAAKhD,EAAY,CACf,IAAM+E,EAAeF,GAAiB,aAEtC,GAAIE,EAGF,OAFAkB,QAAQC,IAAI,sCACZjI,EAAS8G,GAIb9G,EAASkH,IACTpF,EAAY,EAAGC,KACd,CAACA,IAGJgD,qBAAU,WACH4C,IAGL7F,EAAY/B,EAAMiC,KAAO,EAAGD,GAC5B6F,GAAiB,MAChB,CAACD,EAAe5F,EAAYhC,EAAMiC,OAGrC+C,qBAAU,WACR,IAAKhD,EACH,OAAOgF,eAAemB,QAAQ,YAAahF,KAAKC,UAAUpD,MAE3D,CAACgC,EAAYhC,IAET,CAAEA,QAAOwH,UAASE,QAAO1F,aAAY6C,gBAAegD,oBEjDzDO,GADMpI,EAAR,EAAQA,MAAOwH,EAAf,EAAeA,QAASE,EAAxB,EAAwBA,MAAO1F,EAA/B,EAA+BA,WAAY6C,EAA3C,EAA2CA,cAAegD,EAA1D,EAA0DA,iBAK1D,OAFAI,QAAQC,IAAIlI,GAER0H,EACK,yDAGP,eAAC,IAAM1D,SAAP,YACIhC,GAAchC,EAAMoH,QAAQ,GAC5B,cAAC,GAAD,CACE3D,MAAK,UAAKjC,GAAL,OAAsBC,GAAtB,OAAsCzB,EAAMoH,QAAQ,GAAGiB,eAC5DzE,MAAO5D,EAAMoH,QAAQ,GAAGkB,eACxBzE,KAAM7D,EAAMoH,QAAQ,GAAGmB,WAEvB,KAEJ,cAAC,GAAD,CAAW1D,cAAeA,IAE1B,cAAC,GAAD,CAAMd,OAAQ/B,EAAa,gBAAkB,iBAA7C,SACGhC,EAAMoH,QAAQoB,KAAI,SAACC,GAAD,OACjB,cAAC,GAAD,CAEErE,WAAS,EACTX,MACEgF,EAAMC,YAAN,UACOlH,GADP,OACwBE,GADxB,OACsC+G,EAAMC,aACxCC,GAENpG,QAASkG,EAAMG,IAPVH,EAAMG,SAYhBpB,GAAW,cAAC,GAAD,IAEXxH,EAAMiC,KAAOjC,EAAMqH,cAAgBG,GAClC,cAAC,GAAD,CAAQ3B,SAAU,kBAAMgC,GAAiB,IAAzC,2BC3DKzH,GAAUC,IAAOC,IAAV,6MAUPC,GAAUF,IAAOC,IAAV,wVCcLuI,GApBI,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WACpB,OACE,cAAC,IAAM9E,SAAP,UACE,cAAC,GAAD,UACE,eAAC,GAAD,WACE,cAAC,IAAD,CAAMpD,GAAG,IAAT,SACE,0CAEF,qCACA,+BAAOkI,YCZJ1I,GAAUC,IAAOC,IAAV,uRACJ,gBAAGyI,EAAH,EAAGA,SAAH,OACZA,EAAQ,cAAUvH,GAAV,OAA2BC,GAA3B,OAA2CsH,EAA3C,KAAyD,UAexDxI,GAAUF,IAAOC,IAAV,wPAYPoD,GAAOrD,IAAOC,IAAV,stBCoBF0I,GAtCG,SAAC,GAAD,IAAGP,EAAH,EAAGA,MAAH,OAChB,cAAC,GAAD,CAASM,SAAUN,EAAMJ,cAAzB,SACE,eAAC,GAAD,WACE,cAAC,GAAD,CACE5E,MACEgF,EAAMC,YAAN,UACOlH,GADP,OACwBE,GADxB,OACsC+G,EAAMC,aACxCC,GAENzE,aAAa,EACbE,WAAW,IAEb,eAAC,GAAD,WACE,6BAAKqE,EAAM7E,QACX,sCACA,4BAAI6E,EAAMF,WAEV,sBAAKU,UAAU,mBAAf,UACE,gCACE,wCACA,qBAAKA,UAAU,QAAf,SAAwBR,EAAMS,kBAEhC,sBAAKD,UAAU,WAAf,UACE,0CAAaR,EAAMU,UAAUC,OAAS,EAAI,IAAM,MAC/CX,EAAMU,UAAUX,KAAI,SAACa,GAAD,OACnB,4BAA6BA,EAASC,MAA9BD,EAASE,6BCrClBnJ,GAAUC,IAAOC,IAAV,2JAOPC,GAAUF,IAAOC,IAAV,kpBCyBLkJ,GA1BM,SAAC,GAA+B,IAA7BxD,EAA4B,EAA5BA,KAAMyD,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACpC,OACE,cAAC,IAAM1F,SAAP,UACE,cAAC,GAAD,UACE,eAAC,GAAD,WACE,qBAAKiF,UAAU,SAAf,SACE,+CAAkBlD,GAASC,QAE7B,qBAAKiD,UAAU,SAAf,SACE,yCAAY5C,GAAaoD,QAE3B,qBAAKR,UAAU,SAAf,SACE,0CAAa5C,GAAaqD,gBClBzBtJ,GAAUC,IAAOC,IAAV,0PAeP2D,GAAQ5D,IAAOI,IAAV,2ICMHkJ,GAlBD,SAAC,GAAmC,IAAjCL,EAAgC,EAAhCA,KAAMM,EAA0B,EAA1BA,UAAWC,EAAe,EAAfA,SAChC,OACE,cAAC,IAAM7F,SAAP,UACE,eAAC,GAAD,WACE,cAAC,GAAD,CAAOnD,IAAKgJ,EAAU9I,IAAI,gBAC1B,6BAAKuI,IACL,4BAAIM,UC+CGE,GAtCD,WACZ,IACA,EChB2B,SAACvH,GAC5B,MAA0BzC,mBAAS,IAAnC,mBAAOE,EAAP,KAAcC,EAAd,KACA,EAA8BH,oBAAS,GAAvC,mBAAO0H,EAAP,KAAgBC,EAAhB,KACA,EAA0B3H,oBAAS,GAAnC,mBAAO4H,EAAP,KAAcqC,EAAd,KA4CA,OA1CA/E,qBAAU,WACR,IAAM1C,EAAU,uCAAG,gCAAAJ,EAAA,sEAEfuF,GAAW,GACXsC,GAAS,GAHM,SAKKjC,EAAIxF,WAAWC,GALpB,cAKTkG,EALS,gBAMOX,EAAItF,aAAaD,GANxB,OAMTyH,EANS,OAQTb,EAAYa,EAAQC,KAAKC,QAC7B,SAACC,GAAD,MAA2B,aAAfA,EAAOC,OAGrBnK,EAAS,2BACJwI,GADG,IAEN4B,OAAQL,EAAQM,KAChBnB,eAGF1B,GAAW,GAlBI,kDAoBfsC,GAAS,GApBM,0DAAH,qDAwBVhD,EAAeF,GAAiBtE,GAEtC,GAAIwE,EAIF,OAHAkB,QAAQC,IAAI,wCACZjI,EAAS8G,QACTU,GAAW,GAIbnF,MACC,CAACC,IAGJyC,qBAAU,WACRgC,eAAemB,QAAQ5F,EAASY,KAAKC,UAAUpD,MAC9C,CAACuC,EAASvC,IAEN,CAAEA,QAAOwH,UAASE,SD/BgB6C,CADrBC,cAAZjI,SACOkG,EAAf,EAAQzI,MAAcwH,EAAtB,EAAsBA,QAASE,EAA/B,EAA+BA,MAE/B,OAAIF,EACK,cAAC,GAAD,IAELE,EACK,yDAIP,eAAC,IAAM1D,SAAP,WACE,cAAC,GAAD,CAAY8E,WAAYL,EAAMH,iBAC9B,cAAC,GAAD,CAAWG,MAAOA,IAClB,cAAC,GAAD,CACEzC,KAAMyC,EAAMgC,QACZhB,OAAQhB,EAAMgB,OACdC,QAASjB,EAAMiB,UAEjB,cAAC,GAAD,CAAM3F,OAAO,SAAb,SACG0E,EAAM4B,OAAO7B,KAAI,SAACkC,GAAD,OAChB,cAAC,GAAD,CAEEpB,KAAMoB,EAAMpB,KACZM,UAAWc,EAAMd,UACjBC,SACEa,EAAMC,aAAN,UACOnJ,GADP,OACwBE,GADxB,OACsCgJ,EAAMC,cACxChC,IAND+B,EAAMnB,oBEjCRqB,GARE,WACb,OACI,6CCFKxK,GAAUC,IAAOC,IAAV,sZCkELuK,GAvDD,WACZ,MAAgC/K,mBAAS,IAAzC,mBAAOiD,EAAP,KAAiB+H,EAAjB,KACA,EAAgChL,mBAAS,IAAzC,mBAAOkD,EAAP,KAAiB+H,EAAjB,KACA,EAA0BjL,oBAAS,GAAnC,mBAAO4H,EAAP,KAAcqC,EAAd,KAEA,EAAyBiB,qBAAWvL,GAApC,mBAAcwL,GAAd,WACMC,EAAWC,cAEXC,EAAY,uCAAG,8BAAAlJ,EAAA,6DACnB6H,GAAS,GADU,kBAGUjC,EAAIpF,kBAHd,cAGXI,EAHW,gBAIOgF,EAAIjF,aAC1BC,EACAC,EACAC,GAPe,OAIXM,EAJW,OASjB2E,QAAQC,IAAI5E,GACZ2H,EAAQ,CAAE3H,UAAWA,EAAU+H,WAAYtI,aAE3CmI,EAAS,KAZQ,kDAcjBnB,GAAS,GAdQ,0DAAH,qDAkBZuB,EAAc,SAAC7F,GACnB,IAAM6D,EAAO7D,EAAEC,cAAc4D,KACvBnJ,EAAQsF,EAAEC,cAAcvF,MAEjB,aAATmJ,GAAqBwB,EAAY3K,GACxB,aAATmJ,GAAqByB,EAAY5K,IAGvC,OACE,eAAC,GAAD,WACGuH,GAAS,qBAAKuB,UAAU,QAAf,iCACV,8CACA,uBACE3D,KAAK,OACLnF,MAAO4C,EACPuG,KAAK,WACL9D,SAAU8F,IAEZ,uBACEhG,KAAK,WACLnF,MAAO6C,EACPsG,KAAK,WACL9D,SAAU8F,IAEZ,cAAC,GAAD,CAAQzF,SAAUuF,EAAlB,uBC1BSG,GAnBH,WACV,OACE,cAAC,IAAMvH,SAAP,UACE,cAAC,IAAD,UACE,eAAC,EAAD,WACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOwH,KAAK,IAAIC,QAAS,cAAC,GAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,YAAYC,QAAS,cAAC,GAAD,MACjC,cAAC,IAAD,CAAOD,KAAK,KAAKC,QAAS,cAAC,GAAD,MAC1B,cAAC,IAAD,CAAOD,KAAK,SAASC,QAAS,cAAC,GAAD,SAEhC,cAAClM,EAAD,YClBKmM,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1Bb,O","file":"static/js/main.06b30188.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n    :root{\r\n        --maxWidth: 1280px;\r\n        --white: #fff;\r\n        --lightGray: #eee;\r\n        --mediumGray: #353535;\r\n        --darkGray: #1c1c1c;\r\n        --fontSuperBig: 2.5rem;\r\n        --fontBig: 1.5rem;\r\n        --fontMedium: 1.1rem;\r\n        --fontSmall: 0.9rem;\r\n    }\r\n\r\n    *{\r\n        margin: 0;\r\n        padding: 0;\r\n        box-sizing: border-box;\r\n        text-decoration: none;\r\n    }\r\n    body{\r\n        font-family: \"Inter\",san-serif;\r\n        h1{\r\n            font-size: 2rem;\r\n            font-weight: 600;\r\n            color: var(--white);  \r\n        }\r\n        h3{\r\n            font-size: 1.1rem;\r\n            font-weight: 600;\r\n        }\r\n        p{\r\n            font-size: 1rem;\r\n            color: var(--white);\r\n        }\r\n    }\r\n`;\r\n","import React, { useState } from \"react\";\r\n// import React, { useState, createContext } from \"react\";\r\n\r\nexport const Context = React.createContext();\r\n\r\nconst UserProvider = ({ children }) => {\r\n  const [state, setState] = useState(undefined);\r\n\r\n  return (\r\n    <Context.Provider value={[state, setState]}>{children}</Context.Provider>\r\n  );\r\n};\r\n\r\nexport default UserProvider;\r\n\r\n// This is how we set up a global context and a state that we want our application to be able to access globally.","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n    background: var(--darkGray);\r\n    padding: 0 20px;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    max-width: var(--maxWidth);\r\n    padding: 20px 0;\r\n    margin: 0 auto;\r\n`;\r\n\r\nexport const LogoImg = styled.img`\r\n    width: 200px;\r\n    @media screen and (max-width: 500px){\r\n        width: 150px;\r\n    }\r\n`;\r\n\r\nexport const TMDBLogoImg = styled.img`\r\n    width: 100px;\r\n    @media screen and (max-width: 500px){\r\n        width: 80px;\r\n    }\r\n`;\r\n\r\n","export default __webpack_public_path__ + \"static/media/react-movie-logo.e88a4cae.svg\";","export default __webpack_public_path__ + \"static/media/tmdb_logo.2ecbb19c.svg\";","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Wrapper, Content, LogoImg, TMDBLogoImg } from \"./Header.styles\";\r\nimport RMDBLogo from \"../../images/react-movie-logo.svg\";\r\nimport TMDBLogo from \"../../images/tmdb_logo.svg\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <Wrapper>\r\n      <Content>\r\n        <Link to=\"/\">\r\n          <LogoImg src={RMDBLogo} alt=\"rmdb-logo\" />\r\n        </Link>\r\n        <TMDBLogoImg src={TMDBLogo} alt=\"tmdb-logo\" />\r\n      </Content>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","\r\nconst API_URL = \"https://api.themoviedb.org/3/\";\r\nconst API_KEY = 'ccd6ab9cfb45a8c4db59dde452bc69a6';\r\n\r\nconst SEARCH_BASE_URL = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=`;\r\nconst POPULAR_BASE_URL = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US`;\r\n\r\n// For login and voting\r\nconst REQUEST_TOKEN_URL = `${API_URL}authentication/token/new?api_key=${API_KEY}`;\r\nconst LOGIN_URL = `${API_URL}authentication/token/validate_with_login?api_key=${API_KEY}`;\r\nconst SESSION_ID_URL = `${API_URL}authentication/session/new?api_key=${API_KEY}`;\r\n\r\nconst IMAGE_BASE_URL = \"http://image.tmdb.org/t/p/\";\r\n// Sizes: w300, w780, w1280, original\r\nconst BACKDROP_SIZE = \"w1280\";\r\n// w92, w154, w185, w342, w500, w780, original\r\nconst POSTER_SIZE = \"w780\";\r\n\r\nexport {\r\n  API_URL,\r\n  API_KEY,\r\n  SEARCH_BASE_URL,\r\n  POPULAR_BASE_URL,\r\n  REQUEST_TOKEN_URL,\r\n  LOGIN_URL,\r\n  SESSION_ID_URL,\r\n  IMAGE_BASE_URL,\r\n  BACKDROP_SIZE,\r\n  POSTER_SIZE,\r\n};\r\n","import {\r\n  SEARCH_BASE_URL,\r\n  POPULAR_BASE_URL,\r\n  API_URL,\r\n  API_KEY,\r\n  REQUEST_TOKEN_URL,\r\n  LOGIN_URL,\r\n  SESSION_ID_URL,\r\n} from \"../config/config\";\r\n\r\nconst defaultConfig = {\r\n  method: \"POST\",\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n};\r\n\r\nconst apiSettings = {\r\n  fetchMovies: async (searchTerm, page) => {\r\n    const endpoint = searchTerm\r\n      ? `${SEARCH_BASE_URL}${searchTerm}&page=${page}`\r\n      : `${POPULAR_BASE_URL}&page=${page}`;\r\n    return await (await fetch(endpoint)).json();\r\n  },\r\n  fetchMovie: async (movieId) => {\r\n    const endpoint = `${API_URL}movie/${movieId}?api_key=${API_KEY}`;\r\n    return await (await fetch(endpoint)).json();\r\n  },\r\n  fetchCredits: async (movieId) => {\r\n    const creditsEndpoint = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\r\n    return await (await fetch(creditsEndpoint)).json();\r\n  },\r\n  // Bonus material below for login\r\n  getRequestToken: async () => {\r\n    const reqToken = await (await fetch(REQUEST_TOKEN_URL)).json();\r\n    return reqToken.request_token;\r\n  },\r\n  authenticate: async (requestToken, username, password) => {\r\n    const bodyData = {\r\n      username,\r\n      password,\r\n      request_token: requestToken,\r\n    };\r\n    // First authenticate the requestToken\r\n    const data = await (\r\n      await fetch(LOGIN_URL, {\r\n        ...defaultConfig,\r\n        body: JSON.stringify(bodyData),\r\n      })\r\n    ).json();\r\n    // Then get the sessionId with the requestToken\r\n    if (data.success) {\r\n      const sessionId = await (\r\n        await fetch(SESSION_ID_URL, {\r\n          ...defaultConfig,\r\n          body: JSON.stringify({ request_token: requestToken }),\r\n        })\r\n      ).json();\r\n      return sessionId;\r\n    }\r\n  },\r\n  rateMovie: async (sessionId, movieId, value) => {\r\n    const endpoint = `${API_URL}movie/${movieId}/rating?api_key=${API_KEY}&session_id=${sessionId}`;\r\n\r\n    const rating = await (\r\n      await fetch(endpoint, {\r\n        ...defaultConfig,\r\n        body: JSON.stringify({ value }),\r\n      })\r\n    ).json();\r\n\r\n    return rating;\r\n  },\r\n};\r\n\r\nexport default apiSettings;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  background: linear-gradient(\r\n      to bottom,\r\n      rgba(0, 0, 0, 0) 41%,\r\n      rgba(0, 0, 0, 0.65) 100%\r\n    ),\r\n    url(${({ image }) => image}), var(--darkGray);\r\n  background-size: 100%, cover;\r\n  height: 500px;\r\n  position: relative;\r\n  background-position: center;\r\n  animation: animateHeroImage 1s;\r\n\r\n  @keyframes animateHeroImage {\r\n    from {\r\n      opacity: 0;\r\n    }\r\n    to {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  max-width: var(--maxWidth);\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n`;\r\n\r\nexport const Text = styled.div`\r\n  z-index: 100;\r\n  max-width: 700px;\r\n  position: absolute;\r\n  bottom: 30px;\r\n  min-height: 100px;\r\n  color: var(--white);\r\n\r\n  h1 {\r\n    font-size: var(--fontSuperBig);\r\n    @media screen and (max-width: 720px) {\r\n      font-size: var(--fontBig);\r\n    }\r\n  }\r\n\r\n  p {\r\n    margin-top: 10px;\r\n    font-size: var(--fontMedium);\r\n    color: var(--lightGray);\r\n\r\n    @media screen and (max-width: 720px) {\r\n      fonts-size: var(--fontSmall);\r\n    }\r\n  }\r\n\r\n  @media screen and (max-width: 720px) {\r\n    max-width: 100%;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// Styles\r\nimport { Wrapper, Content, Text } from \"./HeroImage.styles\";\r\n\r\nconst HeroImage = ({ image, title, text }) => {\r\n  return (\r\n    <Wrapper image={image}>\r\n      <Content>\r\n        <Text>\r\n          <h1>{title}</h1>\r\n          <p>{text}</p>\r\n        </Text>\r\n      </Content>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nHeroImage.propTypes = {\r\n  image: PropTypes.string,\r\n  title: PropTypes.string,\r\n  text: PropTypes.string,\r\n};\r\n\r\nexport default HeroImage;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  max-width: var(--maxWidth);\r\n  margin: 0 auto;\r\n  padding: 0 20px;\r\n\r\n  h1 {\r\n    margin-top: 25px;\r\n    color: var(--mediumGray);\r\n\r\n    @media screen and (max-width: 720px) {\r\n      font-size: var(--fontBig);\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Content = styled.div`\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\r\n    grid-gap: 2rem;\r\n    margin-top: 25px;\r\n`;\r\n\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// Styles\r\nimport { Wrapper, Content } from \"./Grid.styles\";\r\n\r\nconst Grid = ({ header, children }) => {\r\n  return (\r\n    <React.Fragment>\r\n      <Wrapper>\r\n        <h1>{header}</h1>\r\n        <Content>{children}</Content>\r\n      </Wrapper>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nGrid.propTypes = {\r\n  header: PropTypes.string,\r\n  children: PropTypes.any,\r\n};\r\n\r\nexport default Grid;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Image = styled.img`\r\n  width: 100%;\r\n  max-width: 720px;\r\n  border-radius: 20px;\r\n  transition: all 0.3s;\r\n  object-fit: cover;\r\n  height: ${({ movieHeight }) => (movieHeight ? `520px` : `auto`)};\r\n  animation: animateThumb 0.5s;\r\n\r\n  :hover {\r\n    opacity: 0.8;\r\n  }\r\n\r\n  @keyframes animateThumb {\r\n    from {\r\n      opacity: 0;\r\n    }\r\n    to {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport Popup from 'reactjs-popup';\r\n// Styles\r\nimport { Image } from \"./Thumbnail.styles\";\r\n\r\nconst Thumbnail = ({ image, movieId, clickable, movieHeight }) => {\r\n  return (\r\n    <React.Fragment>\r\n      {clickable ? (\r\n        <Link to={`/${movieId}`} target=\"_self\">\r\n          <Image src={image} alt=\"movie-thumb\" movieHeight={movieHeight} />\r\n        </Link>\r\n      ) : (\r\n        <Image src={image} alt=\"movie-thumb\" movieHeight={movieHeight} />\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nThumbnail.prototype = {\r\n  image: PropTypes.string,\r\n  movieId: PropTypes.number,\r\n  clickable: PropTypes.bool,\r\n};\r\n\r\nexport default Thumbnail;\r\n","import { Spinner } from \"./Spinner.styles\";\r\nexport default Spinner;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Spinner = styled.div`\r\n  border: 5px solid var(--lightGray);\r\n  border-top: 5px solid var(--mediumGray);\r\n  border-radius: 50%;\r\n  width: 50px;\r\n  height: 50px;\r\n  animation: spin 0.8s linear infinite;\r\n  margin: 20px auto;\r\n\r\n  @keyframes spin {\r\n    0% {\r\n      transform: rotate(0deg);\r\n    }\r\n    100% {\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 0 20px;\r\n  height: 70px;\r\n  background: var(--darkGray);\r\n`;\r\n\r\nexport const Content = styled.div`\r\n    position: relative;\r\n    max-width: var(--maxWidth);\r\n    width: 100%;\r\n    height: 45px;\r\n    background: var(--mediumGray);\r\n    border-radius: 40px;\r\n    color: var(--white);\r\n\r\n    img{\r\n        position: absolute;\r\n        left: 17px;\r\n        top: 10px;\r\n        width: 25px;\r\n    }\r\n    input{\r\n        font-size: var(--fontMedium);\r\n        margin: 3px 0;\r\n        padding: 0 0 0 60px;\r\n        width: 95%;\r\n        height: 40px;\r\n        border: 0;\r\n        background: transparent;\r\n        border-radius: 40px;\r\n        color: var(--white);\r\n\r\n        :focus{\r\n            outline: none;\r\n        }\r\n    }\r\n`;","export default __webpack_public_path__ + \"static/media/search-icon.82b9d96a.svg\";","import React, { useState, useEffect, useRef } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Wrapper, Content } from \"./SearchBar.styles\";\r\n\r\nimport searchIcon from \"../../images/search-icon.svg\";\r\n\r\nconst SearchBar = ({ setSearchTerm }) => {\r\n  const [state, setState] = useState(\"\");\r\n  const handleChange = (e) => {\r\n    setState(e.currentTarget.value);\r\n  };\r\n\r\n  const initial = useRef(true);\r\n\r\n  useEffect(() => {\r\n    if (initial.current) {\r\n      initial.current = false;\r\n      return;\r\n    }\r\n    const timer = setTimeout(() => {\r\n      setSearchTerm(state);\r\n    }, 500);\r\n    return () => clearTimeout(timer);\r\n  }, [setSearchTerm, state]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Wrapper>\r\n        <Content>\r\n          <img src={searchIcon} alt=\"search-icon\" />\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search Movie\"\r\n            onChange={handleChange}\r\n            value={state}\r\n          />\r\n        </Content>\r\n      </Wrapper>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nSearchBar.propTypes = {\r\n  callback: PropTypes.func,\r\n};\r\n\r\nexport default SearchBar;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.button`\r\n  display: block;\r\n  background: var(--darkGray);\r\n  width: 25%;\r\n  min-width: 200px;\r\n  height: 60px;\r\n  border-radius: 30px;\r\n  color: var(--white);\r\n  border: 0;\r\n  font-size: var(--fontBig);\r\n  margin: 20px auto;\r\n  transform: all 0.3s;\r\n  outline: none;\r\n  cursor: pointer;\r\n\r\n  :hover {\r\n    opacity: 0.8;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// Styles\r\nimport { Wrapper } from \"./Button.styles\";\r\n\r\nconst Button = ({ children, callback }) => {\r\n  return (\r\n    <React.Fragment>\r\n      <Wrapper type=\"button\" onClick={callback}>\r\n        {children}\r\n      </Wrapper>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  children: PropTypes.any,\r\n  callback: PropTypes.func,\r\n};\r\n\r\nexport default Button;\r\n","// Convert time to hours and minutes\r\nexport const calcTime = (time) => {\r\n  const hours = Math.floor(time / 60);\r\n  const mins = time % 60;\r\n  return `${hours}h ${mins}m`;\r\n};\r\n\r\n// Convert a number to money formatting\r\nexport const convertMoney = (money) => {\r\n  const formatValue = new Intl.NumberFormat(\"en-US\", {\r\n    style: \"currency\",\r\n    currency: \"INR\",\r\n    minimumFractionDigits: 0,\r\n  });\r\n  return formatValue.format(money);\r\n};\r\n\r\n// Session Storage\r\nexport const isPersistedState = stateName => {\r\n  const sessionState = sessionStorage.getItem(stateName);\r\n  return sessionState && JSON.parse(sessionState);\r\n}\r\n","import { useState, useEffect } from \"react\";\r\n// API\r\nimport API from \"../API/API\";\r\n// Helpers\r\nimport { isPersistedState } from \"../helpers/helpers\";\r\n\r\nconst intialState = {\r\n  page: 0,\r\n  results: [],\r\n  total_pages: 0,\r\n  total_results: 0,\r\n};\r\n\r\nexport const useHomeFetch = () => {\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [state, setState] = useState(intialState);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setEror] = useState(false);\r\n  const [isLoadingMore, setIsLoadingMore] = useState(false);\r\n\r\n  const fetchMovies = async (page, searchTerm = \"\") => {\r\n    try {\r\n      setEror(false);\r\n      setLoading(true);\r\n      const movies = await API.fetchMovies(searchTerm, page);\r\n      //   console.log(movies);\r\n      setState((prev) => ({\r\n        ...movies,\r\n        results:\r\n          page > 1 ? [...prev.results, ...movies.results] : [...movies.results],\r\n      }));\r\n    } catch (error) {\r\n      setEror(true);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  // Initial\r\n  useEffect(() => {\r\n    fetchMovies(1);\r\n  }, []);\r\n\r\n  // Search\r\n  useEffect(() => {\r\n    if (!searchTerm) {\r\n      const sessionState = isPersistedState(\"homeState\");\r\n\r\n      if (sessionState) {\r\n        console.log(\"GRABBING FROM SESSION STORAGE\");\r\n        setState(sessionState);\r\n        return;\r\n      }\r\n    }\r\n    setState(intialState);\r\n    fetchMovies(1, searchTerm);\r\n  }, [searchTerm]);\r\n\r\n  // Load More Button\r\n  useEffect(() => {\r\n    if (!isLoadingMore) {\r\n      return;\r\n    }\r\n    fetchMovies(state.page + 1, searchTerm);\r\n    setIsLoadingMore(false);\r\n  }, [isLoadingMore, searchTerm, state.page]);\r\n\r\n  // Write to sessionStorage\r\n  useEffect(() => {\r\n    if (!searchTerm) {\r\n      return sessionStorage.setItem(\"homeState\", JSON.stringify(state));\r\n    }\r\n  }, [searchTerm, state]);\r\n\r\n  return { state, loading, error, searchTerm, setSearchTerm, setIsLoadingMore };\r\n};\r\n","export default __webpack_public_path__ + \"static/media/no_image.45d45293.jpg\";","import React from \"react\";\r\n\r\n// API\r\nimport API from \"../API/API\";\r\n\r\n// Config\r\nimport { POSTER_SIZE, BACKDROP_SIZE, IMAGE_BASE_URL } from \"../config/config\";\r\n\r\n// Components\r\nimport HeroImage from \"./HeroImage\";\r\nimport Grid from \"./Grid\";\r\nimport Thumbnail from \"./Thumbnail\";\r\nimport Spinner from \"./Spinner\";\r\nimport SearchBar from \"./SearchBar\";\r\nimport Button from \"../components/Button\";\r\n\r\n// Hooks\r\nimport { useHomeFetch } from \"../hooks/useHomeFetch\";\r\n\r\n// Image: if API fails to render image then the fallback image used this one\r\nimport NoImage from \"../images/no_image.jpg\";\r\n\r\nconst Home = () => {\r\n  const { state, loading, error, searchTerm, setSearchTerm, setIsLoadingMore } =\r\n    useHomeFetch();\r\n\r\n  console.log(state);\r\n\r\n  if (error) {\r\n    return <h1>Something Went Wrong...</h1>;\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      {!searchTerm && state.results[0] ? (\r\n        <HeroImage\r\n          image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${state.results[0].backdrop_path}`}\r\n          title={state.results[0].original_title}\r\n          text={state.results[0].overview}\r\n        />\r\n      ) : null}\r\n\r\n      <SearchBar setSearchTerm={setSearchTerm}></SearchBar>\r\n\r\n      <Grid header={searchTerm ? \"Search Result\" : \"Popular Movies\"}>\r\n        {state.results.map((movie) => (\r\n          <Thumbnail\r\n            key={movie.id}\r\n            clickable\r\n            image={\r\n              movie.poster_path\r\n                ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`\r\n                : NoImage\r\n            }\r\n            movieId={movie.id}\r\n          />\r\n        ))}\r\n      </Grid>\r\n\r\n      {loading && <Spinner />}\r\n\r\n      {state.page < state.total_pages && !loading && (\r\n        <Button callback={() => setIsLoadingMore(true)}>Load More</Button>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default Home;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 100%;\r\n    height: 50px;\r\n    background: var(--mediumGray);\r\n    color: var(--white);\r\n`;\r\n\r\nexport const Content = styled.div`\r\n    display: flex;\r\n    width: 100%;\r\n    max-width: var(--maxWidth);\r\n    padding: 0 20px;\r\n\r\n    span{\r\n        font-size: var(--fontMedium);\r\n        color: var(--white);\r\n        padding-right: 10px;\r\n\r\n        @media screen and (max-width: 760px){\r\n            font-size: var(--fontSmall);\r\n        }\r\n    }\r\n`;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n// Styles\r\nimport { Wrapper, Content } from \"./BreadCrump.styles\";\r\n\r\nconst BreadCrump = ({ movieTitle }) => {\r\n  return (\r\n    <React.Fragment>\r\n      <Wrapper>\r\n        <Content>\r\n          <Link to=\"/\">\r\n            <span>Home</span>\r\n          </Link>\r\n          <span>|</span>\r\n          <span>{movieTitle}</span>\r\n        </Content>\r\n      </Wrapper>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nBreadCrump.propTypes = {\r\n  movieTitle: PropTypes.string,\r\n};\r\n\r\nexport default BreadCrump;\r\n","import styled from \"styled-components\";\r\nimport { IMAGE_BASE_URL, BACKDROP_SIZE } from \"../../config/config\";\r\n\r\nexport const Wrapper = styled.div`\r\n  background: ${({ backdrop }) =>\r\n    backdrop ? `url(${IMAGE_BASE_URL}${BACKDROP_SIZE}${backdrop})` : \"#000\"};\r\n  background-size: cover;\r\n  background-position: center;\r\n  padding: 40px 20px;\r\n  animation: animateMovieInfo 1s;\r\n  @keyframes animateMovieInfo {\r\n    from {\r\n      opacity: 0;\r\n    }\r\n    to {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  max-width: var(--maxWidth);\r\n  margin: 0 auto;\r\n  background: rgba(0, 0, 0, 0.7);\r\n  border-radius: 20px;\r\n  @media screen and (max-width: 768px) {\r\n    display: block;\r\n    max-height: none;\r\n  }\r\n`;\r\n\r\nexport const Text = styled.div`\r\n  width: 100%;\r\n  padding: 60px;\r\n  color: var(--white);\r\n  overflow: hidden;\r\n\r\n  .rating-directors {\r\n    display: flex;\r\n    justify-content: flex-start;\r\n    padding: 30px 0px;\r\n  }\r\n  .score {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 35px;\r\n    height: 35px;\r\n    background: #fff;\r\n    color: #000;\r\n    font-weight: 800;\r\n    border-radius: 50%;\r\n    margin-left: 12px;\r\n  }\r\n  .director {\r\n    margin: 0 0 0 80px;\r\n    p {\r\n      margin: 0;\r\n      padding: 5px 0px;\r\n    }\r\n  }\r\n  h1 {\r\n    @media screen and (max-width: 768px) {\r\n      font-size: var(--fontBig);\r\n    }\r\n  }\r\n  h3 {\r\n    padding-top: 20px;\r\n    padding-bottom: 10px;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// Components\r\nimport Thumbnail from \"../Thumbnail\";\r\n\r\n// Config\r\nimport { IMAGE_BASE_URL, POSTER_SIZE } from \"../../config/config\";\r\n\r\n// Fallback Image\r\nimport NoImage from \"../../images/no_image.jpg\";\r\n\r\n// Styles\r\nimport { Wrapper, Content, Text } from \"./MovieInfo.styles\";\r\n\r\nconst MovieInfo = ({ movie }) => (\r\n  <Wrapper backdrop={movie.backdrop_path}>\r\n    <Content>\r\n      <Thumbnail\r\n        image={\r\n          movie.poster_path\r\n            ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`\r\n            : NoImage\r\n        }\r\n        movieHeight={true}\r\n        clickable={false}\r\n      />\r\n      <Text>\r\n        <h1>{movie.title}</h1>\r\n        <h3>PLOT</h3>\r\n        <p>{movie.overview}</p>\r\n\r\n        <div className=\"rating-directors\">\r\n          <div>\r\n            <h3>RATING</h3>\r\n            <div className=\"score\">{movie.vote_average}</div>\r\n          </div>\r\n          <div className=\"director\">\r\n            <h3>DIRECTOR{movie.directors.length > 1 ? \"S\" : \"\"}</h3>\r\n            {movie.directors.map((director) => (\r\n              <p key={director.credit_id}>{director.name}</p>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </Text>\r\n    </Content>\r\n  </Wrapper>\r\n);\r\n\r\nMovieInfo.propTypes = {\r\n  movie: PropTypes.object,\r\n};\r\n\r\nexport default MovieInfo;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    min-height: 50px;\r\n    background: var(--darkGray);\r\n    padding: 0 20px;\r\n`;\r\nexport const Content = styled.div`\r\n    display: flex;\r\n    color: var(--white);\r\n    max-width: var(--maxWidth);\r\n    margin: 0 auto;\r\n    width: 100%;\r\n\r\n    .column{\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        background: var(--mediumGray);\r\n        border-radius: 20px;\r\n        margin: 0 20px;\r\n        flex: 1;\r\n        padding: 8px;\r\n\r\n        :first-child{\r\n            margin-left: 0;\r\n        }\r\n        :last-child{\r\n            margin-right: 0;\r\n        }\r\n    }\r\n\r\n    @media screen and (max-width: 768px){\r\n        display: block;\r\n        .column{\r\n            margin: 20px 0;\r\n        }\r\n    }\r\n`;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// Helpers\r\nimport { calcTime, convertMoney } from \"../../helpers/helpers\";\r\n\r\n// Styles\r\nimport { Wrapper, Content } from \"./MovieInfoBar.styles\";\r\n\r\nconst MovieInfoBar = ({ time, budget, revenue }) => {\r\n  return (\r\n    <React.Fragment>\r\n      <Wrapper>\r\n        <Content>\r\n          <div className=\"column\">\r\n            <p>Running Time: {calcTime(time)}</p>\r\n          </div>\r\n          <div className=\"column\">\r\n            <p>Budget: {convertMoney(budget)}</p>\r\n          </div>\r\n          <div className=\"column\">\r\n            <p>Revenue: {convertMoney(revenue)}</p>\r\n          </div>\r\n        </Content>\r\n      </Wrapper>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nMovieInfoBar.propTypes = {\r\n  time: PropTypes.number,\r\n  budget: PropTypes.number,\r\n  revenue: PropTypes.number,\r\n};\r\n\r\nexport default MovieInfoBar;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n    color: var(--white);\r\n    background: var(--darkGray);\r\n    border-radius: 20px;\r\n    padding: 5px;\r\n    text-align: center;\r\n\r\n    h3{\r\n        margin: 10px 0 0 0;\r\n    }\r\n\r\n    p{\r\n        margin: 5px 0px;\r\n    }\r\n`;\r\nexport const Image = styled.img`\r\n    display: block;\r\n    width: 100%;\r\n    height: 200px;\r\n    object-fit: cover;\r\n    border-radius: 15px;\r\n`;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// Styles\r\nimport { Wrapper, Image } from \"./Actor.styles\";\r\n\r\nconst Actor = ({ name, character, imageURL }) => {\r\n  return (\r\n    <React.Fragment>\r\n      <Wrapper>\r\n        <Image src={imageURL} alt=\"actor-thumb\" />\r\n        <h3>{name}</h3>\r\n        <p>{character}</p>\r\n      </Wrapper>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nActor.propTypes = {\r\n  name: PropTypes.string,\r\n  character: PropTypes.string,\r\n  imageURL: PropTypes.string,\r\n};\r\n\r\nexport default Actor;\r\n","import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\n// Config\r\nimport { IMAGE_BASE_URL, POSTER_SIZE } from \"../config/config\";\r\n\r\n// Components\r\nimport Grid from \"./Grid\";\r\nimport Spinner from \"./Spinner\";\r\nimport BreadCrump from \"./BreadCrump\";\r\nimport MovieInfo from \"./MovieInfo\";\r\nimport MovieInfoBar from \"./MovieInfoBar\";\r\nimport Actor from \"./Actor\";\r\n\r\n// Hooks\r\nimport { useMovieFetch } from \"../hooks/useMovieFetch\";\r\n\r\n// Fallback Image\r\nimport NoImage from \"../images/no_image.jpg\";\r\n\r\nconst Movie = () => {\r\n  const { movieId } = useParams();\r\n  const { state: movie, loading, error } = useMovieFetch(movieId);\r\n\r\n  if (loading) {\r\n    return <Spinner />;\r\n  }\r\n  if (error) {\r\n    return <h1>Something Went Wrong...</h1>;\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <BreadCrump movieTitle={movie.original_title} />\r\n      <MovieInfo movie={movie} />\r\n      <MovieInfoBar\r\n        time={movie.runtime}\r\n        budget={movie.budget}\r\n        revenue={movie.revenue}\r\n      />\r\n      <Grid header=\"Actors\">\r\n        {movie.actors.map((actor) => (\r\n          <Actor\r\n            key={actor.credit_id}\r\n            name={actor.name}\r\n            character={actor.character}\r\n            imageURL={\r\n              actor.profile_path\r\n                ? `${IMAGE_BASE_URL}${POSTER_SIZE}${actor.profile_path}`\r\n                : NoImage\r\n            }\r\n          />\r\n        ))}\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Movie;\r\n","import { useState, useEffect } from \"react\";\r\nimport API from \"../API/API\";\r\n\r\n// Helpers\r\nimport { isPersistedState } from \"../helpers/helpers\";\r\n\r\nexport const useMovieFetch = (movieId) => {\r\n  const [state, setState] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchMovie = async () => {\r\n      try {\r\n        setLoading(true);\r\n        setError(false);\r\n\r\n        const movie = await API.fetchMovie(movieId);\r\n        const credits = await API.fetchCredits(movieId);\r\n        // Get directors only\r\n        const directors = credits.crew.filter(\r\n          (member) => member.job === \"Director\"\r\n        );\r\n\r\n        setState({\r\n          ...movie,\r\n          actors: credits.cast,\r\n          directors,\r\n        });\r\n\r\n        setLoading(false);\r\n      } catch (error) {\r\n        setError(true);\r\n      }\r\n    };\r\n\r\n    const sessionState = isPersistedState(movieId);\r\n\r\n    if (sessionState) {\r\n      console.log(\"Grabbing movieId from sessionStorage\");\r\n      setState(sessionState);\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    fetchMovie();\r\n  }, [movieId]);\r\n\r\n  // Write to sessionStorage\r\n  useEffect(() => {\r\n    sessionStorage.setItem(movieId, JSON.stringify(state));\r\n  }, [movieId, state]);\r\n\r\n  return { state, loading, error };\r\n};\r\n","import React from \"react\";\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <div>\r\n            Not Found\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotFound;","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  margin: 0 auto;\r\n  max-width: 320px;\r\n  padding: 20px;\r\n  color: var(--darkGray);\r\n  input {\r\n    width: 100%;\r\n    height: 30px;\r\n    border: 1px solid var(--darkGray);\r\n    border-radius: 20px;\r\n    margin: 10px 0;\r\n    padding: 10px;\r\n  }\r\n  .error {\r\n    color: red;\r\n  }\r\n`;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport API from \"../../API/API\";\r\n\r\n// Components\r\nimport Button from \"../Button\";\r\n\r\n// Styles\r\nimport { Wrapper } from \"./login.styles\";\r\n\r\n// Context\r\nimport { Context } from \"../../context/context\";\r\n\r\nconst Login = () => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(false);\r\n\r\n  const [_user, setUser] = useContext(Context);\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async () => {\r\n    setError(false);\r\n    try {\r\n      const requestToken = await API.getRequestToken();\r\n      const sessionId = await API.authenticate(\r\n        requestToken,\r\n        username,\r\n        password\r\n      );\r\n      console.log(sessionId);\r\n      setUser({ sessionId: sessionId.session_id, username });\r\n\r\n      navigate(\"/\");\r\n    } catch (error) {\r\n      setError(true);\r\n    }\r\n  };\r\n\r\n  const handleInput = (e) => {\r\n    const name = e.currentTarget.name;\r\n    const value = e.currentTarget.value;\r\n\r\n    if (name === \"username\") setUsername(value);\r\n    if (name === \"password\") setPassword(value);\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      {error && <div className=\"error\">There was an error!</div>}\r\n      <label>Username:</label>\r\n      <input\r\n        type=\"text\"\r\n        value={username}\r\n        name=\"username\"\r\n        onChange={handleInput}\r\n      />\r\n      <input\r\n        type=\"password\"\r\n        value={password}\r\n        name=\"password\"\r\n        onChange={handleInput}\r\n      />\r\n      <Button callback={handleSubmit}>Login</Button>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\n\r\n// Routing\r\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\r\n\r\n// Styles\r\nimport { GlobalStyle } from \"./styles/global/GlobalStyle\";\r\n\r\n// Context\r\nimport UserProvider from \"./context/context\";\r\n\r\n// Components\r\nimport Header from \"./components/Header\";\r\nimport Home from \"./components/Home\";\r\nimport Movie from \"./components/Movie\";\r\nimport NotFound from \"./components/NotFound\";\r\nimport Login from \"./components/Login/login\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Router>\r\n        <UserProvider>\r\n          <Header />\r\n          <Routes>\r\n            <Route path=\"/\" element={<Home />} />\r\n            <Route path=\"/:movieId\" element={<Movie />} />\r\n            <Route path=\"/*\" element={<NotFound />} />\r\n            <Route path=\"/login\" element={<Login />} />\r\n          </Routes>\r\n          <GlobalStyle />\r\n        </UserProvider>\r\n      </Router>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}